 So today I'll walk you through how to get started with LaTek using the editor Overleaf which you can sign up for using your soon account. To get started I have this template that I've made called main.tech that's linked in Overleaf and what I want you to do is just copy, paste this into a new project once you make your Overleaf account. So simply like project example project would do. And then copy this in and in Overleaf this green compile recompile button is what allows you to render the tech file. So once you click this you should see that the LaTek gets rendered and there's a bunch of different settings that you have here that you can change as well but for now this will suffice. Additionally there's a logs and output files button which will tell you both warnings and some under full errors but the main things to worry about will be highlighted in red so as long as you don't see red generally you'll be good to go. You can ignore these for now. When you finish LaTek you can also hit this download button to download the finalized PDF which you will then submit to Gradescope. I also want to point out that on Overleaf there is a visual editor where you can take any LaTek and see it in a way that's a little bit easier to interpret from the actual text but also specifically when you render any logical or mathematical symbols it'll be far easier to read in the visual editor than it is in the code editor. Alright now let me get you started with just setting up your collaborators, your course name and your homework. I hope that you'll consider using this template in other classes moving forward as LaTek is critical for more than just 311 and so you can go ahead and change this class name if you ever use this template for other classes but all of these additional configurations you can skip past until you scroll down past the quick references all the way to the questions. If you ever unsure where the corresponding LaTek exists for a particular question on your PDF all you have to do is just double click on the PDF and it'll take you to the corresponding LaTek. Now let's start off by trying to write some math. So in question 1 part A I'll just type in something like 4x squared. This is a mathematical expression and so if I were to compile this you'll see 3 errors pop up. When in reality it's only one error but it states that there's a missing dollar sign. Now a missing dollar sign just means that you aren't in math mode and because we didn't type this in math mode we get an error. To fix this I just highlight this region and press shift dollar sign. This will put me in math mode. There are other ways to do this that we specify in the quick reference but this is fine for now and so if I compile this you'll see we're back to no errors and then we're able to get 4x squared to render. Likewise if I just wanted to center this really quickly I just highlight this again and hold shift dollar sign and the double dollar sign just allows me to center this. Nice. And then you'll notice that a new line is simply done with just a double slash. Cool. Now let's talk about how we can do an expression that's more relevant to this class. So let's do something like p slash 2q. Another way of writing 2 is the slash write arrow. Either one works. And this is essentially an implication which is something you'll hear in this class a lot. Now I want you to note that there is this command in LaTeX called slash implies. Now this is a bit different than an implication in this class because slash implies is actually used for a direct proof which is something we'll talk about much later but the point is a double arrow is not the same as a single arrow so don't use them interchangeably. Please stick to slash 2 or slash write arrow for an implication. In other words I can write this. I can say that the two are not equal so please don't use them interchangeably. Awesome. So we have some good stuff rendering now. I'm going to give you also this other way of writing proofs that you'll see later on in this class which uses the inline environment. There's two types of inline environments. There's a line and a line star. I like a line star because it doesn't number the lines of my proof but you can choose either one. So if I were to do some kind of expression like this and I wanted to place it inside the inline environment you'll see that this pops up in red because I'm using the dolly signs with the line but a line is actually already a math environment so you don't need these so now it's good. And what a line allows you to do is if I were to write some text here and another line of text afterwards like so. If you want to align the text you can place an amp or sand right here and this will allow you to align it nicely. And then we just do a new line and we'll recompile this and see that we have nicely centered proofs that we can later use for formal proofs in the class. Nice. Okay. And from here you'll also see that sometimes there'll be cases where you want a lot of reasoning. And this might go outside the box. Okay. So I'm going to render this and you'll see that the line of reasoning just goes slightly out of the box. Okay. It's not too big of a problem but if I wanted to make the width of this a little bit bigger all you have to do is just change the scaling factor that I've added for you so I can make this one and that should be big enough for me to fit all of it nicely into the purple box. All right. Great. So just remember this width command is always there for you. Now when you go into fill in your homework you can fill in with the original problem that is provided in the homework and the title. And once you do that every title in the table of contents allows you to click on it to navigate to that particular problem which is quite nice. And this quick reference guide is also going to help you get started with some basic logical symbols, understanding math mode, some useful online tools and how to insert an image. But for a more in-depth look I want you to take a look at this template that Alyssa and Jacob took the time to write which has more specifics about formatting and some of the more intricate details of LaTec that you might encounter throughout the course. Now when trying to find a particular symbol that is not already specified in the guide what you can do is go to Detexify which is a way that you can draw a symbol like the not symbol and get the corresponding LaTec command. So maybe like an exclusive or something you want to try to find and you can use LaTec to do that. Detexify to do that. Awesome. Now there's also the finite state machine website which you will learn about far, far later in the class but all of these are right here for you to use later on in the course. Okay well take some time to navigate Overleaf and the LaTec setup. You're welcome to play around with the different styling abilities of this TCB set but just be careful about messing around with formatting too much as LaTec can be a little bit hard to debug. But best of luck and I really hope that you take the time to learn how to LaTec because it'll pay off in the long run. So enjoy your time with LaTec. Please don't edit the template directly. Please copy it into a new project. But enjoy LaTec-ing.